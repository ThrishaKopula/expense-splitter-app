{"ast":null,"code":"var _jsxFileName = \"/Users/thrishakopula/Desktop/Projects/expense-splitter-app/expense-splitter-frontend/src/components/NewGroupForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { createGroup } from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewGroupForm({\n  users\n}) {\n  _s();\n  const queryClient = useQueryClient();\n  const [name, setName] = useState(\"\");\n  const [selectedUserIds, setSelectedUserIds] = useState([]);\n  const mutation = useMutation({\n    mutationFn: createGroup,\n    onSuccess: () => {\n      queryClient.invalidateQueries([\"groups\"]);\n      setName(\"\");\n      setSelectedUserIds([]);\n    }\n  });\n  const toggleUser = id => {\n    setSelectedUserIds(prev => prev.includes(id) ? prev.filter(uid => uid !== id) : [...prev, id]);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!name) return;\n    mutation.mutate({\n      name,\n      userIds: selectedUserIds\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      marginBottom: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Group Name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: users === null || users === void 0 ? void 0 : users.map(user => /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginRight: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: user.id,\n          checked: selectedUserIds.includes(user.id),\n          onChange: () => toggleUser(user.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), user.name]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: mutation.isLoading ? \"Creating...\" : \"Create Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(NewGroupForm, \"N+Ed+YWdnoFh8eRINK3aS5BngpQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n_c = NewGroupForm;\nexport default NewGroupForm;\nvar _c;\n$RefreshReg$(_c, \"NewGroupForm\");","map":{"version":3,"names":["useState","useMutation","useQueryClient","createGroup","jsxDEV","_jsxDEV","NewGroupForm","users","_s","queryClient","name","setName","selectedUserIds","setSelectedUserIds","mutation","mutationFn","onSuccess","invalidateQueries","toggleUser","id","prev","includes","filter","uid","handleSubmit","e","preventDefault","mutate","userIds","onSubmit","style","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","map","user","marginRight","type","checked","isLoading","_c","$RefreshReg$"],"sources":["/Users/thrishakopula/Desktop/Projects/expense-splitter-app/expense-splitter-frontend/src/components/NewGroupForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { createGroup } from \"../api/api\";\n\nfunction NewGroupForm({ users }) {\n  const queryClient = useQueryClient();\n  const [name, setName] = useState(\"\");\n  const [selectedUserIds, setSelectedUserIds] = useState([]);\n\n  const mutation = useMutation({\n    mutationFn: createGroup,\n    onSuccess: () => {\n      queryClient.invalidateQueries([\"groups\"]);\n      setName(\"\");\n      setSelectedUserIds([]);\n    },\n  });\n\n  const toggleUser = (id) => {\n    setSelectedUserIds((prev) =>\n      prev.includes(id) ? prev.filter((uid) => uid !== id) : [...prev, id]\n    );\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!name) return;\n    mutation.mutate({ name, userIds: selectedUserIds });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={{ marginBottom: \"1rem\" }}>\n      <h3>Create Group</h3>\n      <input placeholder=\"Group Name\" value={name} onChange={(e) => setName(e.target.value)} />\n      <div>\n        {users?.map((user) => (\n          <label key={user.id} style={{ marginRight: \"1rem\" }}>\n            <input\n              type=\"checkbox\"\n              value={user.id}\n              checked={selectedUserIds.includes(user.id)}\n              onChange={() => toggleUser(user.id)}\n            />\n            {user.name}\n          </label>\n        ))}\n      </div>\n      <button type=\"submit\">{mutation.isLoading ? \"Creating...\" : \"Create Group\"}</button>\n    </form>\n  );\n}\n\nexport default NewGroupForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
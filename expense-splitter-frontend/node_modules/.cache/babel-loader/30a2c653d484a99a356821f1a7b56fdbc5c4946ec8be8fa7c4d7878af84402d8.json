{"ast":null,"code":"var _jsxFileName = \"/Users/thrishakopula/Desktop/Projects/expense-splitter-app/expense-splitter-frontend/src/components/Groups.js\",\n  _s = $RefreshSig$();\n// src/components/Groups.js\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { getGroups, createGroup, getUsers } from \"../api/api\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Groups() {\n  _s();\n  const queryClient = useQueryClient();\n\n  // Groups state\n  const {\n    data: groups = [],\n    isLoading: groupsLoading,\n    error: groupsError\n  } = useQuery({\n    queryKey: [\"groups\"],\n    queryFn: getGroups\n  });\n\n  // Users for selection\n  const {\n    data: users = []\n  } = useQuery({\n    queryKey: [\"users\"],\n    queryFn: getUsers\n  });\n\n  // Selected users for new group\n  const [groupName, setGroupName] = useState(\"\");\n  const [selectedUserIds, setSelectedUserIds] = useState([]);\n\n  // Mutation to create group\n  const createMutation = useMutation({\n    mutationFn: createGroup,\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: [\"groups\"]\n      });\n      setGroupName(\"\");\n      setSelectedUserIds([]);\n    }\n  });\n  const handleCheckboxChange = userId => {\n    setSelectedUserIds(prev => prev.includes(userId) ? prev.filter(id => id !== userId) : [...prev, userId]);\n  };\n  const handleAddGroup = e => {\n    e.preventDefault();\n    if (!groupName) return;\n    createMutation.mutate({\n      name: groupName,\n      userIds: selectedUserIds\n    });\n  };\n  if (groupsLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading groups...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 29\n  }, this);\n  if (groupsError) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error fetching groups: \", groupsError.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddGroup,\n      style: {\n        marginBottom: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Group Name\",\n        value: groupName,\n        onChange: e => setGroupName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"0.5rem\",\n          marginBottom: \"0.5rem\"\n        },\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            marginRight: \"1rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: user.id,\n            checked: selectedUserIds.includes(user.id),\n            onChange: () => handleCheckboxChange(user.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), user.name]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: createMutation.isLoading ? \"Creating...\" : \"Add Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: groups.map(group => {\n        var _group$users;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [group.name, \" \\u2014 \", (_group$users = group.users) === null || _group$users === void 0 ? void 0 : _group$users.map(u => u.name).join(\", \")]\n        }, group.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Groups, \"9X6KpD4iXUyIQkcd4Ni/V1ycxy8=\", false, function () {\n  return [useQueryClient, useQuery, useQuery, useMutation];\n});\n_c = Groups;\nexport default Groups;\nvar _c;\n$RefreshReg$(_c, \"Groups\");","map":{"version":3,"names":["useQuery","useMutation","useQueryClient","getGroups","createGroup","getUsers","useState","useEffect","jsxDEV","_jsxDEV","Groups","_s","queryClient","data","groups","isLoading","groupsLoading","error","groupsError","queryKey","queryFn","users","groupName","setGroupName","selectedUserIds","setSelectedUserIds","createMutation","mutationFn","onSuccess","invalidateQueries","handleCheckboxChange","userId","prev","includes","filter","id","handleAddGroup","e","preventDefault","mutate","name","userIds","children","fileName","_jsxFileName","lineNumber","columnNumber","message","onSubmit","style","marginBottom","type","placeholder","value","onChange","target","marginTop","map","user","marginRight","checked","group","_group$users","u","join","_c","$RefreshReg$"],"sources":["/Users/thrishakopula/Desktop/Projects/expense-splitter-app/expense-splitter-frontend/src/components/Groups.js"],"sourcesContent":["// src/components/Groups.js\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { getGroups, createGroup, getUsers } from \"../api/api\";\nimport { useState, useEffect } from \"react\";\n\nfunction Groups() {\n  const queryClient = useQueryClient();\n\n  // Groups state\n  const { data: groups = [], isLoading: groupsLoading, error: groupsError } = useQuery({\n    queryKey: [\"groups\"],\n    queryFn: getGroups,\n  });\n\n  // Users for selection\n  const { data: users = [] } = useQuery({\n    queryKey: [\"users\"],\n    queryFn: getUsers,\n  });\n\n  // Selected users for new group\n  const [groupName, setGroupName] = useState(\"\");\n  const [selectedUserIds, setSelectedUserIds] = useState([]);\n\n  // Mutation to create group\n  const createMutation = useMutation({\n    mutationFn: createGroup,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"groups\"] });\n      setGroupName(\"\");\n      setSelectedUserIds([]);\n    },\n  });\n\n  const handleCheckboxChange = (userId) => {\n    setSelectedUserIds((prev) =>\n      prev.includes(userId)\n        ? prev.filter((id) => id !== userId)\n        : [...prev, userId]\n    );\n  };\n\n  const handleAddGroup = (e) => {\n    e.preventDefault();\n    if (!groupName) return;\n    createMutation.mutate({\n      name: groupName,\n      userIds: selectedUserIds,\n    });\n  };\n\n  if (groupsLoading) return <p>Loading groups...</p>;\n  if (groupsError) return <p>Error fetching groups: {groupsError.message}</p>;\n\n  return (\n    <div>\n      <h2>Groups</h2>\n\n      <form onSubmit={handleAddGroup} style={{ marginBottom: \"1rem\" }}>\n        <input\n          type=\"text\"\n          placeholder=\"Group Name\"\n          value={groupName}\n          onChange={(e) => setGroupName(e.target.value)}\n        />\n\n        <div style={{ marginTop: \"0.5rem\", marginBottom: \"0.5rem\" }}>\n          {users.map((user) => (\n            <label key={user.id} style={{ marginRight: \"1rem\" }}>\n              <input\n                type=\"checkbox\"\n                value={user.id}\n                checked={selectedUserIds.includes(user.id)}\n                onChange={() => handleCheckboxChange(user.id)}\n              />\n              {user.name}\n            </label>\n          ))}\n        </div>\n\n        <button type=\"submit\">\n          {createMutation.isLoading ? \"Creating...\" : \"Add Group\"}\n        </button>\n      </form>\n\n      <ul>\n        {groups.map((group) => (\n          <li key={group.id}>\n            {group.name} â€” {group.users?.map((u) => u.name).join(\", \")}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Groups;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
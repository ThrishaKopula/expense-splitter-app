{"ast":null,"code":"var _jsxFileName = \"/Users/thrishakopula/Desktop/Projects/expense-splitter-app/expense-splitter-frontend/src/components/NewGroupForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = \"http://localhost:8080/api\";\nfunction NewGroupForm({\n  users,\n  onGroupCreated\n}) {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [selectedUserIds, setSelectedUserIds] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(`${API_BASE_URL}/groups`, {\n        name,\n        userIds: selectedUserIds\n      });\n      setName(\"\");\n      setSelectedUserIds([]);\n      onGroupCreated();\n    } catch (err) {\n      var _err$response;\n      console.error(\"Error creating group:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n    }\n  };\n  const toggleUser = userId => {\n    setSelectedUserIds(prev => prev.includes(userId) ? prev.filter(id => id !== userId) : [...prev, userId]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Group Name\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Select Users:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), users.map(u => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedUserIds.includes(u.id),\n          onChange: () => toggleUser(u.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), u.name, \" (\", u.email, \")\"]\n      }, u.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(NewGroupForm, \"8TpEuar4sPMaxcMuneffIuKj7ms=\");\n_c = NewGroupForm;\nexport default NewGroupForm;\nvar _c;\n$RefreshReg$(_c, \"NewGroupForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","API_BASE_URL","NewGroupForm","users","onGroupCreated","_s","name","setName","selectedUserIds","setSelectedUserIds","handleSubmit","e","preventDefault","post","userIds","err","_err$response","console","error","response","data","message","toggleUser","userId","prev","includes","filter","id","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","map","u","checked","email","_c","$RefreshReg$"],"sources":["/Users/thrishakopula/Desktop/Projects/expense-splitter-app/expense-splitter-frontend/src/components/NewGroupForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:8080/api\";\n\nfunction NewGroupForm({ users, onGroupCreated }) {\n  const [name, setName] = useState(\"\");\n  const [selectedUserIds, setSelectedUserIds] = useState([]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post(`${API_BASE_URL}/groups`, {\n        name,\n        userIds: selectedUserIds,\n      });\n      setName(\"\");\n      setSelectedUserIds([]);\n      onGroupCreated();\n    } catch (err) {\n      console.error(\"Error creating group:\", err.response?.data || err.message);\n    }\n  };\n\n  const toggleUser = (userId) => {\n    setSelectedUserIds((prev) =>\n      prev.includes(userId)\n        ? prev.filter((id) => id !== userId)\n        : [...prev, userId]\n    );\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h3>Create New Group</h3>\n      <input\n        type=\"text\"\n        placeholder=\"Group Name\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        required\n      />\n      <div>\n        <h4>Select Users:</h4>\n        {users.map((u) => (\n          <label key={u.id}>\n            <input\n              type=\"checkbox\"\n              checked={selectedUserIds.includes(u.id)}\n              onChange={() => toggleUser(u.id)}\n            />\n            {u.name} ({u.email})\n          </label>\n        ))}\n      </div>\n      <button type=\"submit\">Create Group</button>\n    </form>\n  );\n}\n\nexport default NewGroupForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
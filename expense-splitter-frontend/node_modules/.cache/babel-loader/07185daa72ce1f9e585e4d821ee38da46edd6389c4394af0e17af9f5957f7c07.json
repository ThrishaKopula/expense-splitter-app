{"ast":null,"code":"var _jsxFileName = \"/Users/thrishakopula/Desktop/Projects/expense-splitter-app/expense-splitter-frontend/src/components/NewGroupForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewGroupForm({\n  onGroupCreated\n}) {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [userIds, setUserIds] = useState(\"\"); // comma-separated\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const payload = {\n        name,\n        userIds: userIds.split(\",\").map(id => parseInt(id.trim(), 10))\n      };\n      const res = await axios.post(\"http://localhost:8080/api/groups\", payload);\n      onGroupCreated(res.data);\n      setName(\"\");\n      setUserIds(\"\");\n    } catch (err) {\n      var _err$response;\n      console.error(\"Error creating group:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Group name\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"User IDs (comma separated)\",\n      value: userIds,\n      onChange: e => setUserIds(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(NewGroupForm, \"V/C28+VNhTjc4kJYxqK5dPlwvUM=\");\n_c = NewGroupForm;\nexport default NewGroupForm;\nvar _c;\n$RefreshReg$(_c, \"NewGroupForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","NewGroupForm","onGroupCreated","_s","name","setName","userIds","setUserIds","handleSubmit","e","preventDefault","payload","split","map","id","parseInt","trim","res","post","data","err","_err$response","console","error","response","message","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/thrishakopula/Desktop/Projects/expense-splitter-app/expense-splitter-frontend/src/components/NewGroupForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction NewGroupForm({ onGroupCreated }) {\n  const [name, setName] = useState(\"\");\n  const [userIds, setUserIds] = useState(\"\"); // comma-separated\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const payload = {\n        name,\n        userIds: userIds.split(\",\").map((id) => parseInt(id.trim(), 10)),\n      };\n\n      const res = await axios.post(\"http://localhost:8080/api/groups\", payload);\n      onGroupCreated(res.data);\n      setName(\"\");\n      setUserIds(\"\");\n    } catch (err) {\n      console.error(\"Error creating group:\", err.response?.data || err.message);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h3>Create New Group</h3>\n      <input\n        type=\"text\"\n        placeholder=\"Group name\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        required\n      />\n      <input\n        type=\"text\"\n        placeholder=\"User IDs (comma separated)\"\n        value={userIds}\n        onChange={(e) => setUserIds(e.target.value)}\n        required\n      />\n      <button type=\"submit\">Create Group</button>\n    </form>\n  );\n}\n\nexport default NewGroupForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5C,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAMC,OAAO,GAAG;QACdP,IAAI;QACJE,OAAO,EAAEA,OAAO,CAACM,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEC,EAAE,IAAKC,QAAQ,CAACD,EAAE,CAACE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC;MACjE,CAAC;MAED,MAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,kCAAkC,EAAEP,OAAO,CAAC;MACzET,cAAc,CAACe,GAAG,CAACE,IAAI,CAAC;MACxBd,OAAO,CAAC,EAAE,CAAC;MACXE,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOa,GAAG,EAAE;MAAA,IAAAC,aAAA;MACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAE,EAAAF,aAAA,GAAAD,GAAG,CAACI,QAAQ,cAAAH,aAAA,uBAAZA,aAAA,CAAcF,IAAI,KAAIC,GAAG,CAACK,OAAO,CAAC;IAC3E;EACF,CAAC;EAED,oBACEzB,OAAA;IAAM0B,QAAQ,EAAElB,YAAa;IAAAmB,QAAA,gBAC3B3B,OAAA;MAAA2B,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzB/B,OAAA;MACEgC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,YAAY;MACxBC,KAAK,EAAE9B,IAAK;MACZ+B,QAAQ,EAAG1B,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;MACzCG,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF/B,OAAA;MACEgC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,4BAA4B;MACxCC,KAAK,EAAE5B,OAAQ;MACf6B,QAAQ,EAAG1B,CAAC,IAAKF,UAAU,CAACE,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;MAC5CG,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF/B,OAAA;MAAQgC,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEX;AAAC5B,EAAA,CA1CQF,YAAY;AAAAqC,EAAA,GAAZrC,YAAY;AA4CrB,eAAeA,YAAY;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
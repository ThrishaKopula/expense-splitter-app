{"ast":null,"code":"var _jsxFileName = \"/Users/thrishakopula/Desktop/Projects/expense-splitter-app/expense-splitter-frontend/src/components/NewGroupForm.js\",\n  _s = $RefreshSig$();\n// src/components/NewGroupForm.js\nimport { useState } from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { createGroup, getUsers } from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewGroupForm() {\n  _s();\n  const queryClient = useQueryClient();\n  const [name, setName] = useState(\"\");\n  const [selectedUserId, setSelectedUserId] = useState(\"\");\n\n  // Fetch users directly here\n  const {\n    data: users = [],\n    isLoading\n  } = useQuery({\n    queryKey: [\"users\"],\n    queryFn: getUsers\n  });\n  const mutation = useMutation({\n    mutationFn: createGroup,\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: [\"groups\"]\n      }); // refresh groups\n      setName(\"\");\n      setSelectedUserId(\"\");\n    }\n  });\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!name) return;\n    mutation.mutate({\n      name,\n      userIds: selectedUserId ? [selectedUserId] : []\n    });\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading users...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      marginBottom: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Group Name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedUserId,\n      onChange: e => setSelectedUserId(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select User (optional) --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: user.id,\n        children: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: mutation.isPending,\n      children: mutation.isPending ? \"Creating...\" : \"Create Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(NewGroupForm, \"AMxb4KvYrfka+5gvuHotuKMswdE=\", false, function () {\n  return [useQueryClient, useQuery, useMutation];\n});\n_c = NewGroupForm;\nexport default NewGroupForm;\nvar _c;\n$RefreshReg$(_c, \"NewGroupForm\");","map":{"version":3,"names":["useState","useMutation","useQuery","useQueryClient","createGroup","getUsers","jsxDEV","_jsxDEV","NewGroupForm","_s","queryClient","name","setName","selectedUserId","setSelectedUserId","data","users","isLoading","queryKey","queryFn","mutation","mutationFn","onSuccess","invalidateQueries","handleSubmit","e","preventDefault","mutate","userIds","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","style","marginBottom","type","placeholder","value","onChange","target","map","user","id","disabled","isPending","_c","$RefreshReg$"],"sources":["/Users/thrishakopula/Desktop/Projects/expense-splitter-app/expense-splitter-frontend/src/components/NewGroupForm.js"],"sourcesContent":["// src/components/NewGroupForm.js\nimport { useState } from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { createGroup, getUsers } from \"../api/api\";\n\nfunction NewGroupForm() {\n  const queryClient = useQueryClient();\n  const [name, setName] = useState(\"\");\n  const [selectedUserId, setSelectedUserId] = useState(\"\");\n\n  // Fetch users directly here\n  const { data: users = [], isLoading } = useQuery({\n    queryKey: [\"users\"],\n    queryFn: getUsers,\n  });\n\n  const mutation = useMutation({\n    mutationFn: createGroup,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"groups\"] }); // refresh groups\n      setName(\"\");\n      setSelectedUserId(\"\");\n    },\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!name) return;\n    mutation.mutate({\n      name,\n      userIds: selectedUserId ? [selectedUserId] : [],\n    });\n  };\n\n  if (isLoading) return <p>Loading users...</p>;\n\n  return (\n    <form onSubmit={handleSubmit} style={{ marginBottom: \"1rem\" }}>\n      <h3>Create Group</h3>\n      <input\n        type=\"text\"\n        placeholder=\"Group Name\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <select\n        value={selectedUserId}\n        onChange={(e) => setSelectedUserId(e.target.value)}\n      >\n        <option value=\"\">-- Select User (optional) --</option>\n        {users.map((user) => (\n          <option key={user.id} value={user.id}>\n            {user.name}\n          </option>\n        ))}\n      </select>\n      <button type=\"submit\" disabled={mutation.isPending}>\n        {mutation.isPending ? \"Creating...\" : \"Create Group\"}\n      </button>\n    </form>\n  );\n}\n\nexport default NewGroupForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
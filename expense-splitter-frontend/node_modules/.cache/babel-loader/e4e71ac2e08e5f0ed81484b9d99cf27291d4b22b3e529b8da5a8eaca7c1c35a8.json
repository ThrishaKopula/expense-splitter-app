{"ast":null,"code":"var _jsxFileName = \"/Users/thrishakopula/Desktop/Projects/expense-splitter-app/expense-splitter-frontend/src/components/NewGroupForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = \"http://localhost:8080/api\";\nfunction NewGroupForm({\n  onGroupCreated\n}) {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [selectedUserIds, setSelectedUserIds] = useState([]);\n  useEffect(() => {\n    // fetch all users\n    axios.get(`${API_BASE_URL}/users`).then(res => setUsers(res.data)).catch(err => console.error(err));\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post(`${API_BASE_URL}/groups`, {\n      name,\n      userIds: selectedUserIds\n    }).then(res => {\n      alert(\"Group created!\");\n      onGroupCreated(res.data);\n      setName(\"\");\n      setSelectedUserIds([]);\n    }).catch(err => console.error(err));\n  };\n  const toggleUser = id => {\n    setSelectedUserIds(prev => prev.includes(id) ? prev.filter(uid => uid !== id) : [...prev, id]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Group Name\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: user.id,\n          checked: selectedUserIds.includes(user.id),\n          onChange: () => toggleUser(user.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), user.name]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(NewGroupForm, \"0fT0GxBBrRrzFNo1QR4CPchIAwg=\");\n_c = NewGroupForm;\nexport default NewGroupForm;\nvar _c;\n$RefreshReg$(_c, \"NewGroupForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_BASE_URL","NewGroupForm","onGroupCreated","_s","name","setName","users","setUsers","selectedUserIds","setSelectedUserIds","get","then","res","data","catch","err","console","error","handleSubmit","e","preventDefault","post","userIds","alert","toggleUser","id","prev","includes","filter","uid","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","map","user","checked","_c","$RefreshReg$"],"sources":["/Users/thrishakopula/Desktop/Projects/expense-splitter-app/expense-splitter-frontend/src/components/NewGroupForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst API_BASE_URL = \"http://localhost:8080/api\";\n\nfunction NewGroupForm({ onGroupCreated }) {\n  const [name, setName] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [selectedUserIds, setSelectedUserIds] = useState([]);\n\n  useEffect(() => {\n    // fetch all users\n    axios.get(`${API_BASE_URL}/users`)\n      .then(res => setUsers(res.data))\n      .catch(err => console.error(err));\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    axios.post(`${API_BASE_URL}/groups`, { name, userIds: selectedUserIds })\n      .then(res => {\n        alert(\"Group created!\");\n        onGroupCreated(res.data);\n        setName(\"\"); setSelectedUserIds([]);\n      })\n      .catch(err => console.error(err));\n  };\n\n  const toggleUser = (id) => {\n    setSelectedUserIds(prev =>\n      prev.includes(id) ? prev.filter(uid => uid !== id) : [...prev, id]\n    );\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h3>Create Group</h3>\n      <input\n        type=\"text\"\n        placeholder=\"Group Name\"\n        value={name}\n        onChange={e => setName(e.target.value)}\n        required\n      />\n      <div>\n        {users.map(user => (\n          <label key={user.id}>\n            <input\n              type=\"checkbox\"\n              value={user.id}\n              checked={selectedUserIds.includes(user.id)}\n              onChange={() => toggleUser(user.id)}\n            />\n            {user.name}\n          </label>\n        ))}\n      </div>\n      <button type=\"submit\">Create Group</button>\n    </form>\n  );\n}\n\nexport default NewGroupForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/thrishakopula/Desktop/Projects/expense-splitter-app/expense-splitter-frontend/src/components/NewGroupForm.js\",\n  _s = $RefreshSig$();\n// src/components/NewGroupForm.js\nimport { useState } from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { createGroup, getUsers } from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewGroupForm() {\n  _s();\n  const queryClient = useQueryClient();\n  const [name, setName] = useState(\"\");\n  const [selectedUserIds, setSelectedUserIds] = useState([]);\n\n  // Fetch users directly here\n  const {\n    data: users = [],\n    isLoading\n  } = useQuery({\n    queryKey: [\"users\"],\n    queryFn: getUsers\n  });\n  const mutation = useMutation({\n    mutationFn: createGroup,\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: [\"groups\"]\n      }); // refresh groups\n      setName(\"\");\n      setSelectedUserIds(\"\");\n    }\n  });\n  const handleCheckboxChange = userId => {\n    setSelectedUserIds(prev => prev.includes(userId) ? prev.filter(id => id !== userId) // uncheck\n    : [...prev, userId] // check\n    );\n  };\n  const handleUserChange = e => {\n    const options = Array.from(e.target.selectedOptions); // get all selected options\n    const values = options.map(opt => Number(opt.value)); // convert to numbers\n    setSelectedUserIds(values);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!name) return;\n    mutation.mutate({\n      name,\n      userIds: selectedUserIds // send array of selected user IDs\n    });\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading users...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      marginBottom: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Group Name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      multiple: true,\n      value: selectedUserIds,\n      onChange: handleUserChange,\n      style: {\n        width: \"200px\",\n        height: \"100px\"\n      } // optional styling\n      ,\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: user.id,\n        children: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: mutation.isPending,\n      children: mutation.isPending ? \"Creating...\" : \"Create Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(NewGroupForm, \"xCY7iPscHDlm4+ldNm131GS2NO0=\", false, function () {\n  return [useQueryClient, useQuery, useMutation];\n});\n_c = NewGroupForm;\nexport default NewGroupForm;\nvar _c;\n$RefreshReg$(_c, \"NewGroupForm\");","map":{"version":3,"names":["useState","useMutation","useQuery","useQueryClient","createGroup","getUsers","jsxDEV","_jsxDEV","NewGroupForm","_s","queryClient","name","setName","selectedUserIds","setSelectedUserIds","data","users","isLoading","queryKey","queryFn","mutation","mutationFn","onSuccess","invalidateQueries","handleCheckboxChange","userId","prev","includes","filter","id","handleUserChange","e","options","Array","from","target","selectedOptions","values","map","opt","Number","value","handleSubmit","preventDefault","mutate","userIds","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","style","marginBottom","type","placeholder","onChange","multiple","width","height","user","disabled","isPending","_c","$RefreshReg$"],"sources":["/Users/thrishakopula/Desktop/Projects/expense-splitter-app/expense-splitter-frontend/src/components/NewGroupForm.js"],"sourcesContent":["// src/components/NewGroupForm.js\nimport { useState } from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { createGroup, getUsers } from \"../api/api\";\n\nfunction NewGroupForm() {\n  const queryClient = useQueryClient();\n  const [name, setName] = useState(\"\");\n  const [selectedUserIds, setSelectedUserIds] = useState([]); \n\n  // Fetch users directly here\n  const { data: users = [], isLoading } = useQuery({\n    queryKey: [\"users\"],\n    queryFn: getUsers,\n  });\n\n  const mutation = useMutation({\n    mutationFn: createGroup,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"groups\"] }); // refresh groups\n      setName(\"\");\n      setSelectedUserIds(\"\");\n    },\n  });\n\n  const handleCheckboxChange = (userId) => {\n    setSelectedUserIds((prev) =>\n      prev.includes(userId)\n        ? prev.filter((id) => id !== userId) // uncheck\n        : [...prev, userId] // check\n    );\n  };\n\n  const handleUserChange = (e) => {\n    const options = Array.from(e.target.selectedOptions); // get all selected options\n    const values = options.map((opt) => Number(opt.value)); // convert to numbers\n    setSelectedUserIds(values);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!name) return;\n    mutation.mutate({\n      name,\n      userIds: selectedUserIds, // send array of selected user IDs\n    });\n  };\n\n  if (isLoading) return <p>Loading users...</p>;\n\n  return (\n    <form onSubmit={handleSubmit} style={{ marginBottom: \"1rem\" }}>\n      <h3>Create Group</h3>\n      <input\n        type=\"text\"\n        placeholder=\"Group Name\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <select\n        multiple\n        value={selectedUserIds}\n        onChange={handleUserChange}\n        style={{ width: \"200px\", height: \"100px\" }} // optional styling\n      >\n        {users.map((user) => (\n          <option key={user.id} value={user.id}>\n            {user.name}\n          </option>\n        ))}\n      </select>\n      <button type=\"submit\" disabled={mutation.isPending}>\n        {mutation.isPending ? \"Creating...\" : \"Create Group\"}\n      </button>\n    </form>\n  );\n}\n\nexport default NewGroupForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}